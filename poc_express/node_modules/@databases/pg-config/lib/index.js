"use strict";

var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : new P(function (resolve) {
                resolve(result.value);
            }).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const cosmiconfig = require("cosmiconfig");
const PgConfig_validator_1 = require("./PgConfig.validator");
const explorer = cosmiconfig('pg');
function getPgConfig(searchFrom) {
    return __awaiter(this, void 0, void 0, function* () {
        return parseResult((yield explorer.search(searchFrom)));
    });
}
exports.getPgConfig = getPgConfig;
function getPgConfigSync(searchFrom) {
    return parseResult(explorer.searchSync(searchFrom));
}
exports.getPgConfigSync = getPgConfigSync;
function _testReadPgConfigSync(filename) {
    return parseResult(explorer.loadSync(filename));
}
exports._testReadPgConfigSync = _testReadPgConfigSync;
function parseResult(result) {
    return PgConfig_validator_1.default(result ? result.config : {});
}
//# sourceMappingURL=index.js.map