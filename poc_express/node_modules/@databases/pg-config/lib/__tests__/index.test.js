"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("..");
test('get root config', () => {
  expect(__1.getPgConfigSync()).toMatchInlineSnapshot(`
Object {
  "connectionStringEnvironmentVariable": "PG_URL",
  "test": Object {
    "connectTimeoutSeconds": 20,
    "containerName": "pg-test",
    "debug": false,
    "image": "circleci/postgres:10.6-alpine-ram",
    "pgDb": "test-db",
    "pgUser": "test-user",
  },
}
`);
});
test('valid config', () => {
  expect(__1._testReadPgConfigSync(__dirname + '/fixtures/empty.json')).toMatchInlineSnapshot(`
Object {
  "connectionStringEnvironmentVariable": "DATABASE_URL",
  "test": Object {
    "connectTimeoutSeconds": 20,
    "containerName": "pg-test",
    "debug": false,
    "image": "circleci/postgres:10.6-alpine-ram",
    "pgDb": "test-db",
    "pgUser": "test-user",
  },
}
`);
  expect(__1._testReadPgConfigSync(__dirname + '/fixtures/override.json')).toMatchInlineSnapshot(`
Object {
  "connectionStringEnvironmentVariable": "PG_CONNECTION",
  "test": Object {
    "connectTimeoutSeconds": 20,
    "containerName": "pg-test",
    "debug": false,
    "image": "circleci/postgres:10.6-alpine-ram",
    "pgDb": "test-db",
    "pgUser": "test-user",
  },
}
`);
});
test('invalid config', () => {
  expect(() => __1._testReadPgConfigSync(__dirname + '/fixtures/invalid.json')).toThrowErrorMatchingInlineSnapshot(`
"PgConfig.connectionStringEnvironmentVariable should be string
PgConfig value:

{ connectionStringEnvironmentVariable: 10,
  test:
   { connectTimeoutSeconds: 20,
     containerName: 'pg-test',
     debug: false,
     image: 'circleci/postgres:10.6-alpine-ram',
     pgDb: 'test-db',
     pgUser: 'test-user' } }"
`);
});
//# sourceMappingURL=index.test.js.map